import time, math

def binary_gcd(x, y):
    if x == 0:
        return y
    if y == 0:
        return x

    x_z = (x & -x).bit_length()-1
    y_z = (y & -y).bit_length()-1
    shift = min(x_z, y_z)
    y_z >>= y_z

    while x != 0:
        x >>= x_z
        diff = y-x
        x_z = (diff & -diff).bit_length()-1
        y = min(x, y)
        x = abs(diff)

    return y << shift

def binary_gcd_gpt(a, b):
    if a == b:
        return a
    if a == 0:
        return b
    if b == 0:
        return a

    if a&1 == 0:
        if b&1:
            return binary_gcd(a >> 1, b)
        else:
            return binary_gcd(a >> 1, b >> 1) << 1
    elif b&1 == 0:
        return binary_gcd(a, b >> 1)
    elif a > b:
        return binary_gcd((a - b) >> 1, b)
    else:
        return binary_gcd((b - a) >> 1, a)
    

    
if __name__ == "__main__":
    a = 0b1111010000110001001000111010000110001001000111001010010001010100001100010010001110010100100011100001100010010001110010100100011000011000100100011100101001000110000110001001000111001010010001001000110000110001001000111001010010001011100001100010010001110010001110010100100010101000011000100100011100101001000111000011000100100011100101001000110000110001001000111001010010001100001110010100100010101000011000100100011100101001000111000011000100100011100101001000110000110001001000111001010010001110010001010110000110001001000111001010010001000010000110001001000111001010010001100001100010010001110010100100011110000110001001000111001010010001100001100010010001110010100100011000011000100100011100101001000100010010001110010100100010001100100001100010010001110010100100010100100011100101001000101000100001100010010001110010100100010110001001100001100010010001110010100100010001110010100100100001100010010001110010100100010100111100100111101000011000100100011000011000100100011100101001000111001010010001010010000110001011000011000100100011100101001000100001100010010001110011000011000100100011100101001000101001000011000100100011100101001000110001010001110010100001100010010001110010100100011001000110011100100
    b = 0b
    
    start = time.time()
    binary_gcd(a, b)
    print (f"{(time.time()-start):.10f}")

    start = time.time()
    binary_gcd_gpt(a, b)
    print (f"{(time.time()-start):.10f}")